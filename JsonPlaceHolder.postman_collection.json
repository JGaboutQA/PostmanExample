{
	"info": {
		"_postman_id": "e90fca5a-ccef-4f7c-88a8-117a26948e7f",
		"name": "JsonPlaceHolder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PT get all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response is json\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"is json sorted by id\", function() {\r",
							"    var jsonArray = pm.response.json();\r",
							"    var length = jsonArray.length;\r",
							"    var counter = jsonArray[0].id - 1;\r",
							"    var tmp;\r",
							"    for(var i = 0; i < length; i++) {\r",
							"       tmp = jsonArray[i].id;\r",
							"       pm.expect(tmp).to.be.above(counter);\r",
							"       counter = tmp; \r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/posts",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT 2 get 99 post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"check user id\", function () {\r",
							"    pm.expect(jsonData.userId).to.eql(10);\r",
							"});\r",
							"\r",
							"pm.test(\"check id\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(99);\r",
							"});\r",
							"\r",
							"pm.test(\"title not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"body not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.body).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/posts/99",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "NT get post 150",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"{}\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/posts/150",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts",
						"150"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT post a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"check userId\", function () {\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"id not empty\", function () {\r",
							"    pm.expect(jsonData.id).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"title is right\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(pm.collectionVariables.get(\"title\"));\r",
							"});\r",
							"\r",
							"pm.test(\"body is right\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.body).to.eql(pm.collectionVariables.get(\"body\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var title = (Math.random() + 1).toString(36).substring(7);\r",
							"var body = (Math.random() + 1).toString(36).substring(3);\r",
							"\r",
							"pm.collectionVariables.set(\"title\", title);\r",
							"pm.collectionVariables.set(\"body\", body);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"{{title}}\",\r\n    \"body\":\"{{body}}\",\r\n    \"userId\":1,\r\n    \"id\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_JPH}}/posts",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response is json\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"user 5 equals to example\", function () {\r",
							"    pm.expect(jsonData[4]).to.eql(pm.collectionVariables.get(\"user5\")); \r",
							"});\r",
							"\r",
							"pm.test(\"compare city and geo.let\", function () {\r",
							"    pm.expect(jsonData[0].address.city).to.eql(\"Gwenborough\");   \r",
							"    pm.expect(jsonData[0].address.geo.lat).to.eql(\"-37.3159\");  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/users",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT get user 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); \r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(pm.collectionVariables.get(\"user5\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/users/5",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT delete post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); \r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"{}\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_JPH}}/posts/3",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "PT update post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); \r",
							"\r",
							"pm.test(\"title updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"new string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"userId\": 1,\r\n        \"id\": 3,\r\n        \"title\": \"new string\",\r\n        \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_JPH}}/posts/3",
					"host": [
						"{{url_JPH}}"
					],
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.collectionVariables.set(\"url_JPH\", \"jsonplaceholder.typicode.com\");",
					"",
					"var user5 = {",
					"    \"id\": 5,",
					"    \"name\": \"Chelsey Dietrich\",",
					"    \"username\": \"Kamren\",",
					"    \"email\": \"Lucio_Hettinger@annie.ca\",",
					"    \"address\": {",
					"        \"street\": \"Skiles Walks\",",
					"        \"suite\": \"Suite 351\",",
					"        \"city\": \"Roscoeview\",",
					"        \"zipcode\": \"33263\",",
					"        \"geo\": {",
					"            \"lat\": \"-31.8129\",",
					"            \"lng\": \"62.5342\"",
					"        }",
					"    },",
					"    \"phone\": \"(254)954-1289\",",
					"    \"website\": \"demarco.info\",",
					"    \"company\": {",
					"        \"name\": \"Keebler LLC\",",
					"        \"catchPhrase\": \"User-centric fault-tolerant solution\",",
					"        \"bs\": \"revolutionize end-to-end systems\"",
					"    }",
					"};",
					"",
					"pm.collectionVariables.set(\"user5\", user5);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "title",
			"value": ""
		},
		{
			"key": "body",
			"value": ""
		},
		{
			"key": "url_JPH",
			"value": ""
		},
		{
			"key": "user5",
			"value": ""
		}
	]
}